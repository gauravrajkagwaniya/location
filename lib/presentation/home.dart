import 'package:flutter/material.dart';import 'package:place/model/location.dart';import 'package:search_map_place/search_map_place.dart';import 'package:geolocator/geolocator.dart';import 'package:geocoder/geocoder.dart';class Home extends StatefulWidget {  @override  _HomeState createState() => _HomeState();}class _HomeState extends State<Home> {  Future <CurrentLocation>_getLocation() async  {    Position position = await Geolocator().getCurrentPosition(desiredAccuracy: LocationAccuracy.high);    debugPrint('location: ${position.latitude}');    final coordinates = new Coordinates(position.latitude, position.longitude);    var addresses = await Geocoder.local.findAddressesFromCoordinates(coordinates);    var first = addresses.first;    print("${first.featureName} : ${first.addressLine}");    debugPrint('current location : ${first.locality}, ${first.countryName}');  }  @override  void initState() {   _currentLocation = _getLocation();    // TODO: implement initState    super.initState();  }  Future<CurrentLocation> _currentLocation;  @override  Widget build(BuildContext context) {    return Scaffold(      backgroundColor: Colors.red[100],      appBar: AppBar(        title: Text(          'Task',          style: TextStyle(            fontWeight: FontWeight.bold,            fontSize: 30,          ),        ),        elevation: 0,        backgroundColor: Colors.red[100],      ),      body: SingleChildScrollView(        child: Container(          height: MediaQuery.of(context).size.height,          width: MediaQuery.of(context).size.width,          child: Column(            mainAxisSize: MainAxisSize.min,            mainAxisAlignment: MainAxisAlignment.start,            crossAxisAlignment: CrossAxisAlignment.start,            children: [              SizedBox(                height: 50,              ),              Center(                child: SearchMapPlaceWidget(                  apiKey: 'AIzaSyBBfobVS-bgmf8MZJYXD1B3IDfOwuMK0hc',                  onSelected: (Place place) async {                    Geolocation geoLocation = await place.geolocation;                    print('${geoLocation}');                  },                ),              ),              SizedBox(                height: 10,              ),     // todo search location data card              Container(                  height: MediaQuery.of(context).size.height * .20,                  width: MediaQuery.of(context).size.width,                  child: Card(                    child: Column(                      mainAxisAlignment: MainAxisAlignment.center,                      children: [                        Text('Search place name'),                      ],                    ),                  )),              SizedBox(                height: 10,              ),              // todo my location card              FutureBuilder<CurrentLocation>(                  future: _currentLocation,                  builder: (context, snapshot){                    return snapshot.hasData                        ?                    Container(                        height: MediaQuery.of(context).size.height * .20,                        width: MediaQuery.of(context).size.width,                        child: Card(                          child: Column(                            mainAxisAlignment: MainAxisAlignment.center,                            children: [                              Text('${snapshot.data.name}'),                            ],                          ),                        ))                        :                    Center(                      child: CircularProgressIndicator(),                    );                  }              ),            ],          ),        ),      ),    );  }}